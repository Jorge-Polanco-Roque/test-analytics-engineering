# ============================================================================
# SQL LINTING WORKFLOW - Validación de Sintaxis SQL
# ============================================================================
# Este workflow valida la sintaxis básica de archivos SQL usando sql-lint
# Es más simple que SQLFluff y no requiere configuración de DBT
# ============================================================================

name: SQL Lint

on:
  pull_request:
    paths:
      - 'dbt_project/models/**/*.sql'
      - 'dbt_project/macros/**/*.sql'
      - 'dbt_project/tests/**/*.sql'
  push:
    branches:
      - main
    paths:
      - 'dbt_project/models/**/*.sql'
      - 'dbt_project/macros/**/*.sql'
      - 'dbt_project/tests/**/*.sql'

jobs:
  sql-lint:
    name: 🔍 Validar Sintaxis SQL
    runs-on: ubuntu-latest

    steps:
      # -----------------------------------------------------------------------
      # 1. Checkout del código
      # -----------------------------------------------------------------------
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      # -----------------------------------------------------------------------
      # 2. Setup Node.js (sql-lint es un paquete npm)
      # -----------------------------------------------------------------------
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # -----------------------------------------------------------------------
      # 3. Instalar sql-lint
      # -----------------------------------------------------------------------
      - name: 📦 Install sql-lint
        run: npm install -g sql-lint

      # -----------------------------------------------------------------------
      # 4. Lint archivos SQL
      # -----------------------------------------------------------------------
      - name: 🔍 Lint SQL files
        run: |
          echo "🔍 Validando sintaxis SQL..."

          # Encontrar todos los archivos .sql
          SQL_FILES=$(find dbt_project/models dbt_project/macros dbt_project/tests -name "*.sql" 2>/dev/null || true)

          if [ -z "$SQL_FILES" ]; then
            echo "⚠️  No se encontraron archivos SQL"
            exit 0
          fi

          # Contador de errores
          ERROR_COUNT=0

          # Validar cada archivo
          for file in $SQL_FILES; do
            echo "Checking: $file"

            # sql-lint ignora sintaxis de Jinja ({{ }}, {% %}), así que usamos --ignore-errors
            # Solo queremos validar errores críticos de sintaxis SQL
            if ! sql-lint "$file" --driver=postgres 2>&1 | grep -v "Unexpected token" | grep -v "{{" | grep -v "{%" > /dev/null; then
              echo "✅ $file - OK"
            else
              echo "❌ $file - ERRORES"
              sql-lint "$file" --driver=postgres || true
              ERROR_COUNT=$((ERROR_COUNT + 1))
            fi
          done

          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

          if [ $ERROR_COUNT -eq 0 ]; then
            echo "✅ Todos los archivos SQL tienen sintaxis válida"
            exit 0
          else
            echo "❌ Se encontraron errores en $ERROR_COUNT archivo(s)"
            echo "⚠️  Nota: sql-lint puede reportar falsos positivos con sintaxis de Jinja"
            echo "    Revisa manualmente los errores reportados"
            exit 0  # No fallar el build por esto
          fi

      # -----------------------------------------------------------------------
      # 5. Comentar en PR si hay warnings
      # -----------------------------------------------------------------------
      - name: 💬 Comment on PR
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ **SQL Lint**: Se detectaron posibles problemas de sintaxis SQL. Revisa los logs del workflow para más detalles.'
            })
